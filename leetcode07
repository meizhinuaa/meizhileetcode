/*
*给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
 示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，
如果反转后整数溢出那么就返回 0。

思路：考虑溢出的情况。最大是：Integer.MAX_VALUE,最小是Integer.MIN_VALUE
*
*
* */

public class leetcode07 {
    public int reverse(int x) {
        int res=0;  //定义结果
        while(x !=0){
            int pop=x%10;  //取出最后一位
            //溢出判断2^31-1=2147483647,-2^31=-2147483648
            if(res>Integer.MAX_VALUE/10  || (res==Integer.MIN_VALUE/10 && Integer.MIN_VALUE%10>7)){
                return 0;
            }
            if(res<Integer.MIN_VALUE/10  || (res==Integer.MIN_VALUE/10 && Integer.MIN_VALUE%10<-8)){
                return 0;
            }

            res=res*10+pop;
            x=x/10;
        }
        return res;
    }
}
